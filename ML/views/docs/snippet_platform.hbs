<a href="javascript:history.back()" class="bk-btn">&#8249;</a>

<h1>
    Platform
</h1>
<p>
    What platform to choose isn’t just dependent on what algorithm is chosen,
    or what libraries are available. More important is to see how the data is
    obtained. Keeping an open mind as to where data can come from, and not just
    restricting oneself to using premade datasets, allowing streaming data is
    important. Why? Because of the rapid rise in Internet of Things devices.
</p>
<h3>
    Internet of Things
</h3>
<p>
    The field of activity recognition is a rapidly evolving one. This is mainly
    due to the exponential rise in Internet of Things (IoT) devices. Currently,
    there are over 17 billion connected devices in the world. Of these, there
    are over 7 billion IoT devices (so excluding smartphones, computers and
    similar) with over 6.5 million new devices being connected every day [54].
    This is expected to grow to between 20 and 200 billion within the next five
    to ten years. The promise of IoT doesn’t end at just connecting the devices
    to the internet. It is just the first step.
</p>
<p>
    Advances in RF technology and low power computing will bring
    Internet-connectivity everywhere. Advances in Big Data and machine learning
    will unlock new business opportunities and models. The possibilities are
    nearly endless, but they all still lie quite out of reach from the direct
    consumer. However, specifically for activity recognition, suddenly a lot
    more data is available than there was 10 years ago. Consequently, more and
    more papers and implementations such as    <strong>&lt;fill in references&gt;</strong> are analyzing activity based on
    random sensor data.
</p>
<p>
    Whether the activity data or the sensor data is available, in any case a
    prediction can be made on past events. As long as the event corresponding
    to the deadline is known before which the notification should have been
    presented, any form of data should fit within the design. As such, a server
    based solution, preferably in the cloud, seems most logical.
</p>
<h3>
    Programming language
</h3>
<p>
    When it comes to implementing machine learning algorithms, there are
    several go to languages. The five most used languages [55], in order, are:
</p>
<p>
    - Python
</p>
<p>
    - C/C++
</p>
<p>
    - Java
</p>
<p>
    - R
</p>
<p>
    - JavaScript
</p>
<p>
    While there are many other options, they fall below a 5% mark of
    prioritization in the field of machine learning. Python takes the clear
    lead in this field. This is due to the large number of readily available
    libraries. This dramatically decreases the time required to implement
    machine learning algorithms in applications. However, regardless of
    popularity it is shown that professional background is key to choosing a
    language.
</p>
<p>
    For now ignoring the fact of whether the programmer has any existing
    proficiencies, it is important to note that there is no best language to
    use for machine learning and it is important to take the goal into
    consideration. In this case the goal is to create a server based cloud
    platform. Whereas the algorithms can still be run on any language, the web
    part and a possible API<a href="#_ftn1" name="_ftnref1" title="">[1]</a>
    interface are likely to be implemented in JavaScript.
</p>
<div>
    <br clear="all"/>
    <hr align="left" size="1" width="33%"/>
    <div id="ftn1">
        <p>
            <a href="#_ftnref1" name="_ftn1" title="">[1]</a>
            See section <strong>&lt;fill in later&gt;</strong>
        </p>
    </div>
</div>